import { MigrationInterface, QueryRunner } from "typeorm";

export class InitMigration1741926197542 implements MigrationInterface {
    name = 'InitMigration1741926197542'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "object_entity" ("id" SERIAL NOT NULL, "code" character varying(30), "name" character varying(30), "createdDate" TIMESTAMP, "createdBy" character varying(50), "updatedDate" TIMESTAMP, "updatedBy" character varying(50), "isActive" boolean NOT NULL DEFAULT true, CONSTRAINT "UQ_492d3c96261431a899e894a8088" UNIQUE ("code"), CONSTRAINT "PK_48c917693356ae868326dda8c47" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "right_object" ("id" SERIAL NOT NULL, "rightId" integer NOT NULL, "objectId" integer NOT NULL, "createYn" boolean NOT NULL DEFAULT true, "readYn" boolean NOT NULL DEFAULT true, "updateYn" boolean NOT NULL DEFAULT false, "deleteYn" boolean NOT NULL DEFAULT true, "executeYn" boolean NOT NULL DEFAULT true, "createdDate" TIMESTAMP, "createdBy" character varying(50), "updatedDate" TIMESTAMP, "updatedBy" character varying(50), "isActive" boolean NOT NULL DEFAULT true, CONSTRAINT "PK_1970ffba17afc1773ce8a9ef48b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "right" ("id" SERIAL NOT NULL, "code" character varying(30), "name" character varying(30), "createdDate" TIMESTAMP, "createdBy" character varying(50), "updatedDate" TIMESTAMP, "updatedBy" character varying(50), "isActive" boolean NOT NULL DEFAULT true, CONSTRAINT "PK_77e01b46d514d44ec33fd2d93d3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "role_right" ("id" SERIAL NOT NULL, "roleId" integer NOT NULL, "rightId" integer NOT NULL, "createdDate" TIMESTAMP, "createdBy" character varying(50), "updatedDate" TIMESTAMP, "updatedBy" character varying(50), "isActive" boolean NOT NULL DEFAULT true, CONSTRAINT "PK_df0816e7f526f69342040a48469" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "role" ("id" SERIAL NOT NULL, "code" character varying NOT NULL DEFAULT 'USER', "name" character varying NOT NULL, "createdAt" TIMESTAMP DEFAULT now(), "updatedAt" TIMESTAMP, "isActive" boolean NOT NULL DEFAULT true, "createdBy" character varying(50), "updatedBy" character varying(50), CONSTRAINT "UQ_ee999bb389d7ac0fd967172c41f" UNIQUE ("code"), CONSTRAINT "PK_b36bcfe02fc8de3c57a8b2391c2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "profile" ("id" SERIAL NOT NULL, "firstName" character varying, "lastName" character varying, "phoneNumber" character varying, "isActive" boolean NOT NULL DEFAULT true, "createAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP, "userId" uuid NOT NULL, "socialMedia" character varying, CONSTRAINT "UQ_a24972ebd73b106250713dcddd9" UNIQUE ("userId"), CONSTRAINT "REL_a24972ebd73b106250713dcddd" UNIQUE ("userId"), CONSTRAINT "PK_3dd8bfc97e4a77c70971591bdcb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "keyToken" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "refreshTokenUsed" text NOT NULL DEFAULT '', "refreshToken" character varying NOT NULL, "accessToken" character varying NOT NULL, "user_id" uuid, CONSTRAINT "REL_82ec2cad0a6b52b1f115e22b77" UNIQUE ("user_id"), CONSTRAINT "PK_2f965b2a505823d42065c997118" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "address" ("id" SERIAL NOT NULL, "street" character varying NOT NULL, "city" character varying NOT NULL, "country" character varying NOT NULL, "isDefault" boolean NOT NULL DEFAULT false, "userId" uuid, CONSTRAINT "PK_d92de1f82754668b5f5f5dd4fd5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "email" character varying NOT NULL, "password" character varying NOT NULL, "username" character varying, "roleId" integer NOT NULL, "isVerified" boolean NOT NULL DEFAULT false, "tokenOTP" character varying, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "blog" ("id" SERIAL NOT NULL, "title" character varying NOT NULL, "content" text NOT NULL, "createAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP, CONSTRAINT "PK_85c6532ad065a448e9de7638571" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "files" ("fileId" uuid NOT NULL DEFAULT uuid_generate_v4(), "bucketName" character varying NOT NULL, "fileName" character varying NOT NULL, "fileUrl" character varying NOT NULL, "targetId" integer NOT NULL, "targetType" character varying NOT NULL, CONSTRAINT "PK_25150aaac483703a4ade8353fc3" PRIMARY KEY ("fileId"))`);
        await queryRunner.query(`CREATE TABLE "product_details" ("id" SERIAL NOT NULL, "size" character varying NOT NULL, "color" character varying NOT NULL, "stock" integer NOT NULL, "sold" integer NOT NULL DEFAULT '0', "productId" integer, CONSTRAINT "PK_a3fa8e2e94f3c37a8d731451de4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "inventory" ("id" SERIAL NOT NULL, "warehouseName" character varying(255) NOT NULL, "location" character varying(255) NOT NULL, CONSTRAINT "PK_82aa5da437c5bbfb80703b08309" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "product" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "price" numeric(10,2) NOT NULL, "quantity" integer NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "categoryId" integer, "inventoryId" integer, CONSTRAINT "PK_bebc9158e480b949565b4dc7a82" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "category" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "slug" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "parentId" integer, CONSTRAINT "UQ_cb73208f151aa71cdd78f662d70" UNIQUE ("slug"), CONSTRAINT "PK_9c4e4a89e3674fc9f382d733f03" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "right_object" ADD CONSTRAINT "FK_823b3940be0dcf3d94f7af9ebaa" FOREIGN KEY ("rightId") REFERENCES "right"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "right_object" ADD CONSTRAINT "FK_cf3620793a485b2edbe27810552" FOREIGN KEY ("objectId") REFERENCES "object_entity"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "role_right" ADD CONSTRAINT "FK_e23a99abf5e82f31facf7efc1a4" FOREIGN KEY ("roleId") REFERENCES "role"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "role_right" ADD CONSTRAINT "FK_968ad19cacb669e55be732f2896" FOREIGN KEY ("rightId") REFERENCES "right"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "profile" ADD CONSTRAINT "FK_a24972ebd73b106250713dcddd9" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "keyToken" ADD CONSTRAINT "FK_82ec2cad0a6b52b1f115e22b772" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "address" ADD CONSTRAINT "FK_d25f1ea79e282cc8a42bd616aa3" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_c28e52f758e7bbc53828db92194" FOREIGN KEY ("roleId") REFERENCES "role"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "product_details" ADD CONSTRAINT "FK_64b6c3e629c8bc63c9c02e16b8c" FOREIGN KEY ("productId") REFERENCES "product"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "product" ADD CONSTRAINT "FK_ff0c0301a95e517153df97f6812" FOREIGN KEY ("categoryId") REFERENCES "category"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "product" ADD CONSTRAINT "FK_0d5b00db0b857ac0d8c4dd72437" FOREIGN KEY ("inventoryId") REFERENCES "inventory"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "category" ADD CONSTRAINT "FK_d5456fd7e4c4866fec8ada1fa10" FOREIGN KEY ("parentId") REFERENCES "category"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "category" DROP CONSTRAINT "FK_d5456fd7e4c4866fec8ada1fa10"`);
        await queryRunner.query(`ALTER TABLE "product" DROP CONSTRAINT "FK_0d5b00db0b857ac0d8c4dd72437"`);
        await queryRunner.query(`ALTER TABLE "product" DROP CONSTRAINT "FK_ff0c0301a95e517153df97f6812"`);
        await queryRunner.query(`ALTER TABLE "product_details" DROP CONSTRAINT "FK_64b6c3e629c8bc63c9c02e16b8c"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_c28e52f758e7bbc53828db92194"`);
        await queryRunner.query(`ALTER TABLE "address" DROP CONSTRAINT "FK_d25f1ea79e282cc8a42bd616aa3"`);
        await queryRunner.query(`ALTER TABLE "keyToken" DROP CONSTRAINT "FK_82ec2cad0a6b52b1f115e22b772"`);
        await queryRunner.query(`ALTER TABLE "profile" DROP CONSTRAINT "FK_a24972ebd73b106250713dcddd9"`);
        await queryRunner.query(`ALTER TABLE "role_right" DROP CONSTRAINT "FK_968ad19cacb669e55be732f2896"`);
        await queryRunner.query(`ALTER TABLE "role_right" DROP CONSTRAINT "FK_e23a99abf5e82f31facf7efc1a4"`);
        await queryRunner.query(`ALTER TABLE "right_object" DROP CONSTRAINT "FK_cf3620793a485b2edbe27810552"`);
        await queryRunner.query(`ALTER TABLE "right_object" DROP CONSTRAINT "FK_823b3940be0dcf3d94f7af9ebaa"`);
        await queryRunner.query(`DROP TABLE "category"`);
        await queryRunner.query(`DROP TABLE "product"`);
        await queryRunner.query(`DROP TABLE "inventory"`);
        await queryRunner.query(`DROP TABLE "product_details"`);
        await queryRunner.query(`DROP TABLE "files"`);
        await queryRunner.query(`DROP TABLE "blog"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "address"`);
        await queryRunner.query(`DROP TABLE "keyToken"`);
        await queryRunner.query(`DROP TABLE "profile"`);
        await queryRunner.query(`DROP TABLE "role"`);
        await queryRunner.query(`DROP TABLE "role_right"`);
        await queryRunner.query(`DROP TABLE "right"`);
        await queryRunner.query(`DROP TABLE "right_object"`);
        await queryRunner.query(`DROP TABLE "object_entity"`);
    }

}
